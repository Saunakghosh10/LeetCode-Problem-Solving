class Solution {
public:
    vector<vector<int>> findSubsequences(vector<int>& nums) {
        int n = nums.size();
        set<vector<int>> st;
        for (int i = 0; i < (1 << n); i++)
        {
            string s = bitset<32>(i).to_string();
            s = s.substr(32 - n);
            vector<int> v;
            for (int j = 0; j < n; j++)
                if (s[j] == '1')
                    v.push_back(nums[j]);

            if (v.size() >= 2 and is_sorted(v.begin(), v.end()))
                st.insert(v);
        }
        return vector<vector<int>>(st.begin(), st.end());
    }
};
